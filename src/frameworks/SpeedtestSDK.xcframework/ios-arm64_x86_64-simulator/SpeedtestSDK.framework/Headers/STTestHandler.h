// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from handler.djinni

#import "STLatencyResult.h"
#import "STPacketlossResult.h"
#import "STThroughputResult.h"
#import "STThroughputStage.h"
#import "STTransferResult.h"
#import "STVideoSuiteResult.h"
#import "STVideoTestError.h"
#import "STVideoTestState.h"
#import <Foundation/Foundation.h>
@class STTaskManagerController;


/**
 * This handler contains all the callback methods that can be used to monitor the progress
 * of the various tests. 
 * @note Although you can use this interface directly, we recommend
 * using the `STMainThreadTestHandler` class to ensure that all callbacks happen on the main 
 * thread. In addition there are some methods with Binary serialized json data, which
 * is automatically deserialized by the `STMainThreadTestHandler` class.
 */
@protocol STTestHandler

/** Called after the remote server's IP has been resolved */
- (void)onTestStarted:(nullable STTaskManagerController *)taskController;

/** Called after the test result is uploaded with the result in JSON format */
- (void)onResultUploadFinishedBinary:(nonnull NSData *)json;

/** Called after the test is finished with the result in JSON format */
- (void)onTestFinishedBinary:(nonnull NSData *)json;

/** Called when the test was manually cancelled. */
- (void)onTestCanceled;

/** Called in case in case of failure. */
- (void)onTestFailedBinary:(nonnull NSData *)error
                      json:(nonnull NSData *)json;

/** Test Stage Lifecycle Methods */
- (void)onThroughputTaskStarted:(nullable STTaskManagerController *)taskController
                       remoteIp:(nonnull NSString *)remoteIp
                        localIp:(nonnull NSString *)localIp;

- (void)onThroughputStageStarted:(nullable STTaskManagerController *)taskController
                           stage:(STThroughputStage)stage;

- (void)onThroughputStageFailed:(nonnull NSData *)error
                          stage:(STThroughputStage)stage
                           json:(nonnull NSData *)json;

- (void)onThroughputStageFinished:(nullable STTaskManagerController *)taskController
                            stage:(STThroughputStage)stage;

- (void)onThroughputTaskFinished:(nullable STTaskManagerController *)taskController
                          result:(nonnull STThroughputResult *)result;

- (void)onPacketlossFinished:(nullable STTaskManagerController *)taskController
                      result:(nonnull STPacketlossResult *)result;

- (void)onLatencyProgressUpdated:(nonnull STLatencyResult *)result
              progressPercentage:(float)progressPercentage;

- (void)onLatencyFinished:(nullable STTaskManagerController *)taskController
                   result:(nonnull STLatencyResult *)result;

- (void)onDownloadProgressUpdated:(nonnull STTransferResult *)result
               progressPercentage:(float)progressPercentage;

- (void)onDownloadFinished:(nullable STTaskManagerController *)taskController
                    result:(nonnull STTransferResult *)result;

- (void)onUploadProgressUpdated:(nonnull STTransferResult *)result
             progressPercentage:(float)progressPercentage;

- (void)onUploadFinished:(nullable STTaskManagerController *)taskController
                  result:(nonnull STTransferResult *)result;

- (void)onTracerouteStarted:(nullable STTaskManagerController *)taskController
                       host:(nonnull NSString *)host
                         ip:(nonnull NSString *)ip;

- (void)onTracerouteHopBinary:(nonnull NSString *)host
                      hopJson:(nonnull NSData *)hopJson;

- (void)onTracerouteFinishedBinary:(nullable STTaskManagerController *)taskController
                              host:(nonnull NSString *)host
                    tracerouteJson:(nonnull NSData *)tracerouteJson;

- (void)onTracerouteFailedBinary:(nonnull NSData *)error
                            host:(nonnull NSString *)host
                  tracerouteJson:(nonnull NSData *)tracerouteJson;

- (void)onTracerouteCanceled:(nonnull NSString *)host;

- (void)onDeviceStateCaptureFinishedBinary:(nonnull NSData *)data;

- (void)onDeviceStateCaptureFailedBinary:(nonnull NSData *)error;

/** Called when a video test starts. */
- (void)onVideoTestStarted;

/** Called when an update from a video test is available. Provides the `STcom.ookla.speedtest.sdk.video.VideoTestState`. */
- (void)onVideoTestUpdate:(nonnull STVideoTestState *)state;

/** Called when a video test is canceled by the user. Provides the `STcom.ookla.speedtest.sdk.video.VideoSuiteResult`. */
- (void)onVideoTestCancelled:(nullable STVideoSuiteResult *)result;

/** Called when a video test fails. Provides the `STcom.ookla.speedtest.sdk.video.VideoTestError} and the {@link com.ookla.speedtest.sdk.video.VideoSuiteResult`. */
- (void)onVideoTestFailed:(nonnull STVideoTestError *)error
                   result:(nullable STVideoSuiteResult *)result;

/** Called when a video test completes. Provides the `STcom.ookla.speedtest.sdk.video.VideoSuiteResult`. */
- (void)onVideoTestComplete:(nullable STVideoSuiteResult *)result;

@end
